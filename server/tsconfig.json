{
	"compilerOptions": {
        "module": "NodeNext",
        "target": "ES2021",
		"outDir": "../distServer",
		"allowUnreachableCode": false,
        "allowUnusedLabels": false,
        "alwaysStrict": true, // Ensures that your files are parsed in the ECMAScript strict mode
        "exactOptionalPropertyTypes": false,  // false, we allow setting optional values to 'undefined', which is not possible if this is true
        "importsNotUsedAsValues": "remove", // importsNotUsedAsValues - remove is the default, but we also define it explicitly
        "noFallthroughCasesInSwitch": true,
	    "strict": true, // enable ALL strict options,
        "strictPropertyInitialization": false, // "When set to true, TypeScript will raise an error when a class property was declared but not set in the constructor." , I've disabled this so that we can initialize fields AFTER constructing the object
        "strictNullChecks": true,
        "noImplicitAny": true,
        "noImplicitOverride": true,
        "noImplicitReturns": true,
        "noImplicitThis": true,
        "noPropertyAccessFromIndexSignature": true,
        "noUncheckedIndexedAccess": true,
        "noUnusedLocals": true,
        "noUnusedParameters": true,
        "forceConsistentCasingInFileNames": true,
        "skipLibCheck": true,
	},
	"include": [".", "../.dev/**/*.d.ts"]
}